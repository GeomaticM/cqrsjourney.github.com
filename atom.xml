<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Project &#8220;a CQRS Journey&#8221;</title>
  <link href="http://cqrsjourney.github.com/atom.xml" rel="self"/>
  <link href="http://cqrsjourney.github.com/"/>
  <updated>2012-05-22T13:38:40-07:00</updated>
  <id>http://cqrsjourney.github.com/</id>
  <author>
    <name>Microsoft patterns &amp; practices</name>
    
      <email>cqrsdv@live.com</email>
    
  </author>

  
  <entry>
    <title>V2 Pseudo-Production Release is out</title>
    <link href="http://cqrsjourney.github.com/blog/2012/05/21/V2-Pseudo-Production-Release-is-out/"/>
    <updated>2012-05-21T11:30:00-07:00</updated>
    <id>http://cqrsjourney.github.com/blog/2012/05/21/V2-Pseudo-Production-Release-is-out</id>
    <content type="html">&lt;p&gt;This is our &lt;a href=&quot;http://cqrsjourney.github.com/blog/2012/05/15/Plan-for-V2/&quot;&gt;second pseudo-production release&lt;/a&gt; of the Contoso Conference Management System. The plan was to explore the &lt;strong&gt;migration process&lt;/strong&gt; to understand better how this works in a CQRS/ES implementation and to see if we could perform a no-downtime upgrade with our current infrastructure.&lt;/p&gt;

&lt;p&gt;The picture below depicts a portion of our migrated read models (only some of which are actually in SQL Azure).&lt;br/&gt;
&lt;img src=&quot;http://cqrsjourney.github.com/images/posts/cqrsjourney-conference-v2-migration.png&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;The following user stories made it into the release:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Providing a better user experience for &lt;strong&gt;zero-cost orders&lt;/strong&gt; (at present the registrant is still taken to the payments system even if there’s nothing to pay).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Displaying the number of &lt;strong&gt;remaining seats&lt;/strong&gt; of each seat type in the UI (since there was no read model for this in V1).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Applying &lt;strong&gt;UX designs&lt;/strong&gt; to the &lt;strong&gt;Conference Creation/Management BC&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Unfortunately, it was not possible this time to perform a no-downtime upgrade. This was due to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The fact that we weren&amp;#8217;t storing all the integration events needed in order to regenerate some read models, nor did we have an API for querying the state of the system from an external Bounded Context. So we now have a &lt;strong&gt;message log&lt;/strong&gt; for every message that goes through the service bus.&lt;/li&gt;
&lt;li&gt;Because of this, we have also decided to migrate the event store infrastructure to account for the additional metadata that the message log requires, and we will use as the base for replaying events when regenerating read models (as the message log is much easier to query and is already sorted by time).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Our migration resulted in 1 min 35 secs downtime.&lt;/p&gt;

&lt;p&gt;Now that we have the infrastructure in place, a no-downtime upgrade seems to be an attainable goal for our V3 release.&lt;/p&gt;

&lt;p&gt;In addition to the behind-the-scenes changes listed in the previous &lt;a href=&quot;http://cqrsjourney.github.com/blog/2012/05/15/Plan-for-V2/&quot;&gt;post&lt;/a&gt;, the team made the following changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As mentioned above, there is a now a message log that persists all commands and events. This grew out of the need to persist the integration events. In addition to regenerating read models from events, this is also intended to future-proof the application by capturing everything that might be of interest at some point in the future.&lt;/li&gt;
&lt;li&gt;The Conference solution now includes a migration program to migrate the data to the new event store, re-create the integration events that the V1 release did not persist, and rebuild the read-models with additonal data.&lt;/li&gt;
&lt;li&gt;Several bug fixes (see the &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-code/issues?labels=&amp;amp;milestone=5&amp;amp;page=1&amp;amp;state=closed&quot;&gt;backlog for V2&lt;/a&gt; or the &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-code/commits/dev&quot;&gt;commit history&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;You can access the updated version of the application as a &lt;a href=&quot;http://cqrsjourney-conference.cloudapp.net&quot;&gt;Registrant&lt;/a&gt; or as a &lt;a href=&quot;http://cqrsjourney-conference.cloudapp.net:8080&quot;&gt;Business Customer&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cqrsjourney-conference.cloudapp.net&quot; alt=&quot;CQRS Journey : Conference Management System&quot;&gt;&lt;img src=&quot;http://cqrsjourney.github.com/images/posts/cqrsjourney-conference-v2.png&quot; border=&quot;0&quot;/&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&quot;http://cqrsjourney-conference.cloudapp.net:8080&quot; alt=&quot;CQRS Journey : Conference Management System - Admin Portal&quot;&gt;&lt;img src=&quot;http://cqrsjourney.github.com/images/posts/cqrsjourney-confmgmt-v2.png&quot; border=&quot;0&quot;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are now starting work on V3 and you can track our progress against the &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-code/issues?milestone=5&quot;&gt;V3 milestone&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can read about the V2 release in more detail &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-doc/blob/master/Journey_06_V2Release.markdown&quot;&gt;here&lt;/a&gt; and about the V1 release &lt;a href=&quot;http://cqrsjourney.github.com/blog/2012/05/08/Announcing-V1-Pseudo-Production-Release/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Plans for V2</title>
    <link href="http://cqrsjourney.github.com/blog/2012/05/15/Plan-for-V2/"/>
    <updated>2012-05-15T06:23:00-07:00</updated>
    <id>http://cqrsjourney.github.com/blog/2012/05/15/Plan-for-V2</id>
    <content type="html">&lt;blockquote&gt;&lt;p&gt;Variety is the very spice of life&lt;br/&gt;
&lt;em&gt;- William Cowper, Olney Hymns (1779)&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Following on from our &lt;a href=&quot;http://bit.ly/cqrs-v1&quot;&gt;V1&lt;/a&gt; release of the Contoso Conference Management System we are already well on the way toward our second pseudo-production release. This will be our first experience of handling data-versioning and software updates in an application that implements the CQRS pattern and that uses event sourcing. We plan, if possible, to be able to perform a no-downtime migration; if this proves not to be possible, we&amp;#8217;ll make whatever changes are necessary to make sure that we can perform the V3 migration with no-downtime.&lt;/p&gt;

&lt;p&gt;We have three major user stories on our backlog for this release:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Providing a better user experience for &lt;strong&gt;zero-cost orders&lt;/strong&gt; (at present the registrant is still taken to the payments system even if there&amp;#8217;s nothing to pay). This will involve changes to our registration workflow process, adding some new events, and removing some events that are no longer needed. The Orders and Registrations bounded context uses event sourcing, so the system will need to work with both the old events (that are still in the event store) and the new events when the the new version of the workflow process is introduced.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Displaying the number of &lt;strong&gt;remaining seats of each seat type in the UI&lt;/strong&gt;. This will require a new read-model that will need to be seeded with the correct starting values. This is because in the V1 release the Orders and Registrations bounded context was not receiving and storing the information it needs to calculate these values.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Adding support for &lt;strong&gt;discounts&lt;/strong&gt; for seat prices through the use of promotional codes that the registrant can add during the ordering process. This introduces a brand-new bounded context implemented by a different team (&lt;a href=&quot;http://dymitruk.com/&quot;&gt;Adam Dymitruk&lt;/a&gt;, one of our advisors), that needs to be integrated with the existing bounded contexts. This will also result in further changes to the registration workflow process.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;There are also several changes that will take place behind the scenes, some of which are related to the user stories described above:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Modifying the application to accommodate changes to the set of events used in different versions of the system.&lt;/li&gt;
&lt;li&gt;Improving the robustness of the system by ensuring that commands are always idempotent.&lt;/li&gt;
&lt;li&gt;Improving the robustness of the system by ensuring that, where required, messages are always delivered in order.&lt;/li&gt;
&lt;li&gt;Reevaluating our strategy for persisting integration events.&lt;/li&gt;
&lt;li&gt;Evaluating some options for optimizing the command handling within the system.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;We plan to have V2 ready shortly to give us time to complete V3 before the end of the project.&lt;/p&gt;

&lt;p&gt;You can track our progress against the &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-code/issues?milestone=5&quot;&gt;V2 milestone&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Feel free to provide feedback on code/guidance and &lt;a href=&quot;http://cqrsjourney.github.com/contributors/&quot;&gt;contribute&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Specing out end-to-end scenarios</title>
    <link href="http://cqrsjourney.github.com/blog/2012/05/14/Specing-Out-End-To-End-Scenarios/"/>
    <updated>2012-05-14T11:18:00-07:00</updated>
    <id>http://cqrsjourney.github.com/blog/2012/05/14/Specing-Out-End-To-End-Scenarios</id>
    <content type="html">&lt;h2&gt;From mockups to features&lt;/h2&gt;

&lt;p&gt;To spec out the scenarios for our &lt;a href=&quot;http://cqrsjourney.github.com/blog/2012/03/30/Sample-Application-Overview&quot;&gt;conference management system&lt;/a&gt;, we’ve started with conversations with the domain experts. We’ve envisioned the user interactions with the system and captured them in mockups, like the one below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cqrsjourney.github.com/images/posts/Mockup-conf-mgmt.png&quot; alt=&quot;Conference management mockup&quot; border=&quot;0&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mockups helped us in many ways:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Explaining our ideas in terms of UI interactions to the graphic designers.&lt;/li&gt;
&lt;li&gt;Having discussions with the developers in terms of desired functionality.&lt;/li&gt;
&lt;li&gt;Establishing, discussing and refining terms from our &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-wiki/wiki/Ubiquitous-language&quot;&gt;ubiquitous language&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Evolving our understanding of stories via “what if” scenarios rooted in the mockups.&lt;/li&gt;
&lt;li&gt;Becoming a foundation for the future formulation of the acceptance tests.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Based on these we’ve proceeded to develop acceptance tests using &lt;a href=&quot;http://www.specflow.org/&quot;&gt;SpecFlow&lt;/a&gt;. SpecFlow provides an integrated experience for writing and executing tests in the BDD (&lt;a href=&quot;http://en.wikipedia.org/wiki/Behavior_Driven_Development&quot;&gt;Behavior-Driven Development&lt;/a&gt;) style within Visual Studio. The resulting tests helped us capture, distill and refine the requirements in an unambiguous way. Here’s an example of a SpecFlow acceptance test (Feature):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cqrsjourney.github.com/images/posts/Feature-conf-mgmt.png&quot; alt=&quot;Conference management Feature sample in SpecFlow&quot; border=&quot;0&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The initial step was to write the project specifications as Feature files using the &lt;a href=&quot;ttp://en.wikipedia.org/wiki/Behavior_Driven_Development#Application_examples_in_the_Gherkin_language&quot;&gt;Gherkin&lt;/a&gt; language syntax. They served well for the purpose of evolving and discussing the stories among developers and domain experts. However in that form, they could not be executed. So, from the testing perspective they would need to be executed manually if we wanted to verify whether the implemented functionality has, in fact, met our expectations.&lt;/p&gt;

&lt;h2&gt;From features to executable specs&lt;/h2&gt;

&lt;p&gt;Later on, we added the underlying plumbing to make sure that those features/acceptance tests can actually execute against our system-under-test.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cqrsjourney.github.com/images/posts/Executable-specs-test-run.jpg&quot; alt=&quot;Executable spec test run&quot; border=&quot;0&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We used two different approaches, both of which are valuable.&lt;/p&gt;

&lt;p&gt;Because our application is a web application, for testing directly via the UI, we used &lt;a href=&quot;http://watin.sourceforge.net&quot;&gt;WatiN&lt;/a&gt;, an open source library for automating Web browser testing. These tests help us gain confidence that the key end-to-end happy paths through the system work. They are fragile, however and require substantial maintenance effort.&lt;/p&gt;

&lt;p&gt;Another approach for sub-scenarios is to use subcutaneous testing (or testing just beneath the UI) by directly calling the controllers (i.e. &lt;em&gt;Features\Registration\All Features end to end\SelfRegistrationEndToEndWithInfrastructure.feature&lt;/em&gt;). This way we avoid coupling with the UI but
it may appear to be more complex since it requires some internal knowledge of how the system is implemented. With time, however, it became much easier to use this approach and we were able to reuse a lot of infrastructure as well as internal reuse of the parts of the test actions (these are actually called Step Definitions in SpecFlow).&lt;/p&gt;

&lt;h2&gt;From executable specs to exploratory testing&lt;/h2&gt;

&lt;p&gt;Of course, having the executable specs in place by no means preclude other types of testing. We recognize that good end-to-end acceptance testing requires breadth, depth, variability of actions and data, and rich scenarios, both plausible and implausible. While we value test automation for some of the scenarios, we also have professional testers on our team who are performing exploratory testing, performance testing, content testing etc. They too use the executable specs in their arsenal of tools and artefacts. The executable specs inform them of the goals of the system and some concrete scenarios.&lt;/p&gt;

&lt;h2&gt;Finding your way around&lt;/h2&gt;

&lt;p&gt;The SpecFlow Feature files with the business specifications were structured in the following way. All the end-to-end scenarios were grouped in a subfolder similar to &lt;em&gt;&amp;#8220;Features\Registration\All Features end to end”&lt;/em&gt; so that we could provide a quick overview of the epic (Registration in this case) and two basic reconnaissance paths through the system: one happy path and one sad (failure) path.&lt;/p&gt;

&lt;p&gt;Then, in separate folders we grouped the variations of each scenario within the same epic – for example &lt;em&gt;“Features\Registration\Individual Reservation”&lt;/em&gt; exercises logic for scenarios specifically for individual reservations with various seat type selections. This way we can easily separate the full end-to-end acceptance tests from more fine-grained integration tests with various permutations for each underlying scenario.&lt;/p&gt;

&lt;p&gt;Regarding the implementation details, there are some general support classes that provide many shared infrastructure functions used in most of the preconditions and assertions throughout the &lt;a href=&quot;https://github.com/techtalk/SpecFlow/wiki/Step-Definitions&quot;&gt;Step Definitions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As a test runner we used &lt;a href=&quot;http://xunit.codeplex.com&quot;&gt;xUnit.net&lt;/a&gt; underneath, which is supported by SpecFlow and integrates nicely with some well-known external tools like ReSharper, CodeRush, and TestDriven.NET.&lt;/p&gt;

&lt;h2&gt;Getting involved&lt;/h2&gt;

&lt;p&gt;One of the ways that you can get involved with us is to review and refine the existing acceptance tests or contribute new tests for existing scenarios or even planned (and not yet implemented) scenarios.&lt;/p&gt;

&lt;h2&gt;Final note&lt;/h2&gt;

&lt;p&gt;SpecFlow is just one tool in our testing armory. It is particularly useful as a way to help capture requirements from our Domain Experts in addition to verifying the behavior of the system.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Announcing V1 Pseudo-Production Release</title>
    <link href="http://cqrsjourney.github.com/blog/2012/05/08/Announcing-V1-Pseudo-Production-Release/"/>
    <updated>2012-05-08T11:45:00-07:00</updated>
    <id>http://cqrsjourney.github.com/blog/2012/05/08/Announcing-V1-Pseudo-Production-Release</id>
    <content type="html">&lt;p&gt;As part of our CQRS Journey we plan to have &lt;a href=&quot;http://cqrsjourney.github.com/blog/2012/04/12/Road-to-V1/&quot;&gt;several pseudo-production releases&lt;/a&gt; of the Contoso Conference Management System so that we can explore the real-world issues of data-versioning and software updates in an application that implements the CQRS pattern in several bounded contexts. Over the next few weeks we plan more pseudo-production releases and as we go through them we will be describing our experiences in the guidance documentation.&lt;/p&gt;

&lt;p&gt;Today we are releasing the first of these pseudo-production releases: Contoso Conference Management System (V1).&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;left&quot; src=&quot;http://cqrsjourney.github.com/images/posts/cqrsjourney-conference-v1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;The current release consists of three bounded contexts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Conference Management&lt;/em&gt; (implemented using a traditional CRUD-style architecture).&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Orders and Registrations&lt;/em&gt; (implementing the CQRS pattern and using event sourcing).&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Payments&lt;/em&gt; (implementing the CQRS pattern and using a SQL-based storage).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Keep in mind, while based on the real-world requirements, it is still a &lt;u&gt;sample&lt;/u&gt; application. It doesn’t include the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Authorization (on the backlog for V2).&lt;/li&gt;
&lt;li&gt;Styling for the conference management web site (on the backlog for V2).&lt;/li&gt;
&lt;li&gt;Integration with a real third-party  payment processor (out of scope for the guidance project; we&amp;#8217;ll keep the simulated one).&lt;/li&gt;
&lt;li&gt;Conference details (description, speakers, tracks, sessions, etc.) - you will see static data in the registration hub for now.&lt;/li&gt;
&lt;li&gt;Perf testing (on the backlog for V3).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If you would like to explore the code in the V1 release, you can &lt;strong&gt;download it from GitHub &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-code/tree/V1-pseudo-prod&quot;&gt;here&lt;/a&gt;&lt;/strong&gt;.
To help you get started with building/deploying/running the V1 release code see the release notes &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-doc/blob/master/Appendix1_Running.markdown&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The current release uses the Windows Azure Service Bus to provide its messaging infrastructure and can be deployed to Windows Azure. You can access a deployed version of the application as a &lt;a href=&quot;http://cqrsjourney-conference.cloudapp.net&quot;&gt;Registrant&lt;/a&gt; and as a &lt;a href=&quot;http://cqrsjourney-conference.cloudapp.net:8080&quot;&gt;Business Customer&lt;/a&gt;. Please feel free to use the application and to generate some sample data for us so that we can migrate it for our V2 release.&lt;/p&gt;

&lt;p&gt;Note: You can also run a copy of the application locally without using Windows Azure or Windows Azure Service Bus as described in the &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-doc/blob/master/Appendix1_Running.markdown&quot;&gt;release notes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We would appreciate your feedback on both the code and the written guidance. You can submit your reviews either via GitHub (comments, pull requests, issues) or via our &lt;a href=&quot;http://pundit.cloudapp.net&quot;&gt;lightweight review system&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you&amp;#8217;d like to participate in this sample system evolution and work on any improvements of the existing bounded contexts or new ones, check out &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-code/issues&quot;&gt;our backlog&lt;/a&gt;. We&amp;#8217;ll be happy to see your pull requests!&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Open Call for Enhancements to Event Store Implementation</title>
    <link href="http://cqrsjourney.github.com/blog/2012/05/01/Open-Call-For-Enhancements-To-Event-Store/"/>
    <updated>2012-05-01T10:36:00-07:00</updated>
    <id>http://cqrsjourney.github.com/blog/2012/05/01/Open-Call-For-Enhancements-To-Event-Store</id>
    <content type="html">&lt;p&gt;In the process of our conversion of the Registration process BC to use event sourcing, we have realized we needed some robust event sourcing infrastructure (both for storing the events, and publishing them). We wanted this implementation to be Windows Azure-friendly, as this is where we’ll bedeploying our system to.&lt;/p&gt;

&lt;p&gt;We have now built our initial implementation of the Azure table-based event store and it’s ready for a broad community review and for enhancements. It seems to be self-contained enough and will benefit from crowd-sourcing. Get it from here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Repo: &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-code&quot;&gt;https://github.com/mspnp/cqrs-journey-code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Infrastructure solution: &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-code/blob/dev/source/Infrastructure.sln&quot;&gt;https://github.com/mspnp/cqrs-journey-code/blob/dev/source/Infrastructure.sln&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;We really look forward to your participation in getting this event store production ready!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Notes:&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;This is currently not intended to be a general-purpose, pluggable component. We’ve designed and developed it to fit with our sample application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There’s another implementation based on SQL server. It is meant for running the sample app locally and it’s not ready for production. Nor is it in our scope to make it production-ready. So, when prioritizing where to direct your effort, please choose the Azure table-based implementation.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</content>
  </entry>
  
  <entry>
    <title>The Road to V1</title>
    <link href="http://cqrsjourney.github.com/blog/2012/04/12/Road-to-V1/"/>
    <updated>2012-04-12T15:40:00-07:00</updated>
    <id>http://cqrsjourney.github.com/blog/2012/04/12/Road-to-V1</id>
    <content type="html">&lt;h2&gt;Handling Complexity and Change&lt;/h2&gt;

&lt;blockquote&gt;&lt;p&gt;DDD and ES reduce complexity and cost of change. They would look like useless magic in stable and predictable projects.&lt;br/&gt;
&lt;em&gt;- Rinat Abdullin, CQRS Advisors Mail List&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;Introduction&lt;/h2&gt;

&lt;p&gt;One of the topics discussed on the CQRS Advisors Mail List was how to make the CQRS Journey Project more realistic. In the real world, projects face uncertainty, risk, and volatility in requirements. One of the benefits of applying ideas from DDD and using event sourcing is to make that uncertainty, risk, and volatility more manageable.&lt;/p&gt;

&lt;p&gt;As part of our CQRS Journey, we are planning a pseudo-production release of V1 of the Contoso Conference Management System that includes the core conference management functionality. We will then explore, and document our experiences of enhancing and maintaining the V1 release as we continue to work on the Conference Management System.&lt;/p&gt;

&lt;h2&gt;Contents of the V1 Release&lt;/h2&gt;

&lt;p&gt;The following sections outline our planned functionality for the V1 release.&lt;/p&gt;

&lt;h3&gt;Conference Management&lt;/h3&gt;

&lt;p&gt;This will be a simple CRUD style bounded context that enables a &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-wiki/wiki/Ubiquitous-language&quot;&gt;Business Customer&lt;/a&gt; to create and manage conferences. A Business Customer will be able to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create and update the conference data such as name, description, and dates.&lt;/li&gt;
&lt;li&gt;Publish and un-publish a conference.&lt;/li&gt;
&lt;li&gt;Manage the &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-wiki/wiki/Ubiquitous-language&quot;&gt;Seat Types&lt;/a&gt; (e.g. full-conference, workshop, cocktail party) available at a conference.&lt;/li&gt;
&lt;li&gt;View a list of &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-wiki/wiki/Ubiquitous-language&quot;&gt;Attendees&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Registrations&lt;/h3&gt;

&lt;p&gt;This bounded context will implement the CQRS pattern and use event sourcing. The functionality in this bounded context includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Enabling a &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-wiki/wiki/Ubiquitous-language&quot;&gt;Registrant&lt;/a&gt; to create an &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-wiki/wiki/Ubiquitous-language&quot;&gt;Order&lt;/a&gt; for seats at a conference.&lt;/li&gt;
&lt;li&gt;Handling partial fulfillment of Orders.&lt;/li&gt;
&lt;li&gt;Enabling a Registrant to locate a previously created order using an &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-wiki/wiki/Ubiquitous-language&quot;&gt;Access Code&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Enabling a Registrant to assign Attendees to Seats.&lt;/li&gt;
&lt;li&gt;A task-based UI.&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Integration&lt;/h3&gt;

&lt;p&gt;The Conference Management and Registrations bounded contexts will be integrated so that any changes made by the Business Customer to the quota of Seats at a Conference are detected by the Registrations bounded context. Information about the Attendees is also shared between the two bounded contexts.&lt;/p&gt;

&lt;h3&gt;Payments&lt;/h3&gt;

&lt;p&gt;Part of the Registration Process includes the Registrant making a payment for the Order. The system will include a fake payment service that simulates handling payments by credit card and by invoice.&lt;/p&gt;

&lt;h3&gt;Infrastructure&lt;/h3&gt;

&lt;p&gt;The Contoso Conference Management System will be deployed to Windows Azure and use the Windows Azure Service Bus to provide its messaging infrastructure for Commands and Events. It will also be possible to run the application locally without requiring a Windows Azure subscription.&lt;/p&gt;

&lt;h2&gt;More Information&lt;/h2&gt;

&lt;p&gt;You can follow our work in these two GitHub repositories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mspnp/cqrs-journey-doc&quot;&gt;cqrs-journey-doc repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mspnp/cqrs-journey-code&quot;&gt;cqrs-journey-code repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;You can track our progress against the V1 release milestone:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mspnp/cqrs-journey-code/issues?milestone=4&quot;&gt;V1 Release Milestone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
  </entry>
  
  <entry>
    <title>Sample Application Overview</title>
    <link href="http://cqrsjourney.github.com/blog/2012/03/30/Sample-Application-Overview/"/>
    <updated>2012-03-30T10:15:00-07:00</updated>
    <id>http://cqrsjourney.github.com/blog/2012/03/30/Sample-Application-Overview</id>
    <content type="html">&lt;h2&gt;Contoso Conference Management System&lt;/h2&gt;

&lt;p&gt;This post summarizes the key features and functionality of the proposed Contoso Conference Management System that we are builing in our CQRS Journey projects.
You can read our motivation for choosing this domain &lt;a href=&quot;http://blogs.msdn.com/b/agile/archive/2012/01/24/picking-a-domain-for-cqrs-journey-ri.aspx&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-doc/blob/master/Journey_00_Preface.markdown&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Contoso plans to build an online conference management system that will enable Contoso&amp;#8217;s customers to plan and manage conferences that may be held at a physical location. The system will enable Contoso&amp;#8217;s customers to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Plan the tracks, sessions, and speakers that make up a conference.&lt;/li&gt;
&lt;li&gt;Manage the calls for speakers and paper submission process.&lt;/li&gt;
&lt;li&gt;Manage registration (the sale of seats) for the conference.&lt;/li&gt;
&lt;li&gt;Manage the conference on site, including badge printing and attendee lists.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The following sections describe these functions in more detail.&lt;/p&gt;

&lt;h2&gt;Overview&lt;/h2&gt;

&lt;p&gt;The Conference Management System will be a multi-tennant, cloud-hosted application. Business customers will need to register with the system before they can create and manage their conferences.&lt;/p&gt;

&lt;h2&gt;Conference Planning&lt;/h2&gt;

&lt;p&gt;When a business customer creates a new conference, he must first define some characteristics of the conference such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Will the paper submission process require reviewers.&lt;/li&gt;
&lt;li&gt;What will be the fee structure for paying Contoso.&lt;/li&gt;
&lt;li&gt;Assigning key personnel such as the Program Chair and the Event Planner.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Building a Program&lt;/h2&gt;

&lt;p&gt;The business customer must define the conference program. For a simple conference this may be defined directly. For a more complex conference this may involve several steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Identifying Tracks and Track Chairs.&lt;/li&gt;
&lt;li&gt;Identifying Reviewers.&lt;/li&gt;
&lt;li&gt;Making calls for submissions.&lt;/li&gt;
&lt;li&gt;Reviewing the papers and assigning speakers to sessions.&lt;/li&gt;
&lt;li&gt;Finalizing Track programs.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Selling Seats&lt;/h2&gt;

&lt;p&gt;The business customer will define how many seats are available for the conference and also for any events that are part of the conference that only limited numbers may attend.&lt;/p&gt;

&lt;p&gt;The system must manage the sale of seats to ensure that the conference and sub-events are not over subscribed. This part of the system will also operate wait-lists so that if cancellations are made, then the seats can be re-allocated.&lt;/p&gt;

&lt;p&gt;The system will require that the names of the attendees are associated with the purchased seats so that badges can be printed.&lt;/p&gt;

&lt;h2&gt;On-site Management&lt;/h2&gt;

&lt;p&gt;When attendees arrive at the conference they should be registered against an attendee list, given badges, and given the opportunity to purchase additional seats for any extra events they would like to attend. The system that runs on-site at the conference should not assume that it is permanently connected to the main conference management system.&lt;/p&gt;

&lt;h2&gt;Additional Features&lt;/h2&gt;

&lt;p&gt;Contoso plans to roll out additional features as and when resources are available. These include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Support for Event Planners to manage equipment, signage, etc.&lt;/li&gt;
&lt;li&gt;Tracking attendees at sessions via a barcode on the badge.&lt;/li&gt;
&lt;li&gt;Score submissions for session feedback.&lt;/li&gt;
&lt;li&gt;Live feed of session scores to track the best sessions.&lt;/li&gt;
&lt;li&gt;Reporting feeback to speakers.&lt;/li&gt;
&lt;li&gt;Archiving conference materials.&lt;/li&gt;
&lt;li&gt;Publishing proceedings.&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Ubiquitous language&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mspnp/cqrs-journey-wiki/wiki/Ubiquitous-language&quot;&gt;Here&lt;/a&gt; are the working definitions for the terms in our ubiquitous language for the Conference Managament System sample we are building. We will be adding to and modifying this list as the project proceeds&amp;#8230;&lt;/p&gt;

&lt;h2&gt;More info&lt;/h2&gt;

&lt;p&gt;Follow our progress in these 2 repos (you can set the watchers):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mspnp/cqrs-journey-doc&quot;&gt;https://github.com/mspnp/cqrs-journey-doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mspnp/cqrs-journey-code&quot;&gt;https://github.com/mspnp/cqrs-journey-code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
  </entry>
  
  <entry>
    <title>Taking Community Contributions</title>
    <link href="http://cqrsjourney.github.com/blog/2012/02/25/Taking-Community-Contibutions/"/>
    <updated>2012-02-25T06:45:00-08:00</updated>
    <id>http://cqrsjourney.github.com/blog/2012/02/25/Taking-Community-Contibutions</id>
    <content type="html">&lt;p&gt;We have positioned the CQRS guidance project as a learning journey. We’ve formed a stellar &lt;a href=&quot;http://cqrsjourney.github.com/advisors/members/&quot;&gt;advisory board&lt;/a&gt; and performed some &lt;a href=&quot;http://www.surveymonkey.com/s/cqrsguide&quot;&gt;public consultation&lt;/a&gt; that helped us scope the project initially. While this is good news, we recognize that for this project to be successful, we need to be not only open and transparent, but we also need to collaborate with the community (in its way a global village) more closely. That’s why we are extremely happy and proud to announce that for the first time in the history of the &lt;a href=&quot;http://msdn.com/practices&quot;&gt;Microsoft patterns &amp;amp; practices&lt;/a&gt; team, the following: &lt;strong&gt;In the true spirit of open source, we will be taking community contributions on the CQRS Journey project&lt;/strong&gt;. This means:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The written guidance and the sample code will be developed in the open and with community involvement.&lt;/li&gt;
&lt;li&gt;We, Microsoft patterns &amp;amp; practices team, will review and accept contributions that meet our guidelines.&lt;/li&gt;
&lt;li&gt;The final deliverable will have an open source license (&lt;a href=&quot;http://opensource.org/licenses/Apache-2.0&quot;&gt;Apache 2.0&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The project will be hosted on GitHub. Our repositories are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Main code repo&lt;/strong&gt; - &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-code&quot;&gt;https://github.com/mspnp/cqrs-journey-code&lt;/a&gt;. Also, includes our prioritized backlog of work items (published under &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-code/issues&quot;&gt;Issues&lt;/a&gt;) and includes stories, dev and test tasks, and bugs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Guidance repo&lt;/strong&gt; - &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-doc&quot;&gt;https://github.com/mspnp/cqrs-journey-doc&lt;/a&gt;. Also, includes the backlog of doc stories, tasks, and content bugs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Project wiki&lt;/strong&gt; - &lt;a href=&quot;https://github.com/mspnp/cqrs-journey-wiki&quot;&gt;https://github.com/mspnp/cqrs-journey-wiki&lt;/a&gt;, where we will try to reconcile various key CQRS and ES related terms and also maintain the ubiquitous language for the domain of the sample application we are building.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;You can find the contributions guidelines under Contribute section.&lt;/p&gt;

&lt;p&gt;Also, check out our company-wide &lt;a href=&quot;http://www.microsoft.com/en-us/openness/default.aspx#home/videos/Commitment-to-Openness&quot;&gt;openness initiative&lt;/a&gt; and brace yourself for a ride! We look forward to working with you! Please keep sending us your feedback.&lt;/p&gt;
</content>
  </entry>
  
</feed>
